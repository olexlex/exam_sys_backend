<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.xmu.examonline.mapper.MajorPoMapper">
  <resultMap id="BaseResultMap" type="cn.edu.xmu.examonline.model.po.MajorPo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="single_selection_num" jdbcType="INTEGER" property="singleSelectionNum" />
    <result column="multiple_selection_num" jdbcType="INTEGER" property="multipleSelectionNum" />
    <result column="judgement_num" jdbcType="INTEGER" property="judgementNum" />
    <result column="short_answer_num" jdbcType="INTEGER" property="shortAnswerNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `id`, `name`, `single_selection_num`, `multiple_selection_num`, `judgement_num`, 
    `short_answer_num`
  </sql>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from major
    where `name` = #{name,jdbcType=VARCHAR}
  </select>
  <select id="selectByExample" parameterType="cn.edu.xmu.examonline.model.po.MajorPoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from major
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from major
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from major
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.xmu.examonline.model.po.MajorPo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into major (`name`, `single_selection_num`, `multiple_selection_num`, 
      `judgement_num`, `short_answer_num`)
    values (#{name,jdbcType=VARCHAR}, #{singleSelectionNum,jdbcType=INTEGER}, #{multipleSelectionNum,jdbcType=INTEGER}, 
      #{judgementNum,jdbcType=INTEGER}, #{shortAnswerNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.xmu.examonline.model.po.MajorPo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into major
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="singleSelectionNum != null">
        `single_selection_num`,
      </if>
      <if test="multipleSelectionNum != null">
        `multiple_selection_num`,
      </if>
      <if test="judgementNum != null">
        `judgement_num`,
      </if>
      <if test="shortAnswerNum != null">
        `short_answer_num`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="singleSelectionNum != null">
        #{singleSelectionNum,jdbcType=INTEGER},
      </if>
      <if test="multipleSelectionNum != null">
        #{multipleSelectionNum,jdbcType=INTEGER},
      </if>
      <if test="judgementNum != null">
        #{judgementNum,jdbcType=INTEGER},
      </if>
      <if test="shortAnswerNum != null">
        #{shortAnswerNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update major
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.singleSelectionNum != null">
        `single_selection_num` = #{record.singleSelectionNum,jdbcType=INTEGER},
      </if>
      <if test="record.multipleSelectionNum != null">
        `multiple_selection_num` = #{record.multipleSelectionNum,jdbcType=INTEGER},
      </if>
      <if test="record.judgementNum != null">
        `judgement_num` = #{record.judgementNum,jdbcType=INTEGER},
      </if>
      <if test="record.shortAnswerNum != null">
        `short_answer_num` = #{record.shortAnswerNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update major
    set `id` = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      `single_selection_num` = #{record.singleSelectionNum,jdbcType=INTEGER},
      `multiple_selection_num` = #{record.multipleSelectionNum,jdbcType=INTEGER},
      `judgement_num` = #{record.judgementNum,jdbcType=INTEGER},
      `short_answer_num` = #{record.shortAnswerNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.xmu.examonline.model.po.MajorPo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update major
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="singleSelectionNum != null">
        `single_selection_num` = #{singleSelectionNum,jdbcType=INTEGER},
      </if>
      <if test="multipleSelectionNum != null">
        `multiple_selection_num` = #{multipleSelectionNum,jdbcType=INTEGER},
      </if>
      <if test="judgementNum != null">
        `judgement_num` = #{judgementNum,jdbcType=INTEGER},
      </if>
      <if test="shortAnswerNum != null">
        `short_answer_num` = #{shortAnswerNum,jdbcType=INTEGER},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.xmu.examonline.model.po.MajorPo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update major
    set `name` = #{name,jdbcType=VARCHAR},
      `single_selection_num` = #{singleSelectionNum,jdbcType=INTEGER},
      `multiple_selection_num` = #{multipleSelectionNum,jdbcType=INTEGER},
      `judgement_num` = #{judgementNum,jdbcType=INTEGER},
      `short_answer_num` = #{shortAnswerNum,jdbcType=INTEGER}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from major
  </select>
</mapper>