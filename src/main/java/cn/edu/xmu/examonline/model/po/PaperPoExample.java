package cn.edu.xmu.examonline.model.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PaperPoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table paper
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table paper
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table paper
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paper
     *
     * @mbggenerated
     */
    public PaperPoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paper
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paper
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paper
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paper
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paper
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paper
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paper
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paper
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paper
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table paper
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table paper
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("`id` is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("`id` is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("`id` =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("`id` <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("`id` >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("`id` >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("`id` <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("`id` <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("`id` in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("`id` not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("`id` between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("`id` not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("`user_id` is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("`user_id` is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("`user_id` =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("`user_id` <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("`user_id` >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("`user_id` >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("`user_id` <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("`user_id` <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("`user_id` in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("`user_id` not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("`user_id` between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("`user_id` not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andMajor1IdIsNull() {
            addCriterion("`major1_id` is null");
            return (Criteria) this;
        }

        public Criteria andMajor1IdIsNotNull() {
            addCriterion("`major1_id` is not null");
            return (Criteria) this;
        }

        public Criteria andMajor1IdEqualTo(Integer value) {
            addCriterion("`major1_id` =", value, "major1Id");
            return (Criteria) this;
        }

        public Criteria andMajor1IdNotEqualTo(Integer value) {
            addCriterion("`major1_id` <>", value, "major1Id");
            return (Criteria) this;
        }

        public Criteria andMajor1IdGreaterThan(Integer value) {
            addCriterion("`major1_id` >", value, "major1Id");
            return (Criteria) this;
        }

        public Criteria andMajor1IdGreaterThanOrEqualTo(Integer value) {
            addCriterion("`major1_id` >=", value, "major1Id");
            return (Criteria) this;
        }

        public Criteria andMajor1IdLessThan(Integer value) {
            addCriterion("`major1_id` <", value, "major1Id");
            return (Criteria) this;
        }

        public Criteria andMajor1IdLessThanOrEqualTo(Integer value) {
            addCriterion("`major1_id` <=", value, "major1Id");
            return (Criteria) this;
        }

        public Criteria andMajor1IdIn(List<Integer> values) {
            addCriterion("`major1_id` in", values, "major1Id");
            return (Criteria) this;
        }

        public Criteria andMajor1IdNotIn(List<Integer> values) {
            addCriterion("`major1_id` not in", values, "major1Id");
            return (Criteria) this;
        }

        public Criteria andMajor1IdBetween(Integer value1, Integer value2) {
            addCriterion("`major1_id` between", value1, value2, "major1Id");
            return (Criteria) this;
        }

        public Criteria andMajor1IdNotBetween(Integer value1, Integer value2) {
            addCriterion("`major1_id` not between", value1, value2, "major1Id");
            return (Criteria) this;
        }

        public Criteria andMajor2IdIsNull() {
            addCriterion("`major2_id` is null");
            return (Criteria) this;
        }

        public Criteria andMajor2IdIsNotNull() {
            addCriterion("`major2_id` is not null");
            return (Criteria) this;
        }

        public Criteria andMajor2IdEqualTo(Integer value) {
            addCriterion("`major2_id` =", value, "major2Id");
            return (Criteria) this;
        }

        public Criteria andMajor2IdNotEqualTo(Integer value) {
            addCriterion("`major2_id` <>", value, "major2Id");
            return (Criteria) this;
        }

        public Criteria andMajor2IdGreaterThan(Integer value) {
            addCriterion("`major2_id` >", value, "major2Id");
            return (Criteria) this;
        }

        public Criteria andMajor2IdGreaterThanOrEqualTo(Integer value) {
            addCriterion("`major2_id` >=", value, "major2Id");
            return (Criteria) this;
        }

        public Criteria andMajor2IdLessThan(Integer value) {
            addCriterion("`major2_id` <", value, "major2Id");
            return (Criteria) this;
        }

        public Criteria andMajor2IdLessThanOrEqualTo(Integer value) {
            addCriterion("`major2_id` <=", value, "major2Id");
            return (Criteria) this;
        }

        public Criteria andMajor2IdIn(List<Integer> values) {
            addCriterion("`major2_id` in", values, "major2Id");
            return (Criteria) this;
        }

        public Criteria andMajor2IdNotIn(List<Integer> values) {
            addCriterion("`major2_id` not in", values, "major2Id");
            return (Criteria) this;
        }

        public Criteria andMajor2IdBetween(Integer value1, Integer value2) {
            addCriterion("`major2_id` between", value1, value2, "major2Id");
            return (Criteria) this;
        }

        public Criteria andMajor2IdNotBetween(Integer value1, Integer value2) {
            addCriterion("`major2_id` not between", value1, value2, "major2Id");
            return (Criteria) this;
        }

        public Criteria andMajor3IdIsNull() {
            addCriterion("`major3_id` is null");
            return (Criteria) this;
        }

        public Criteria andMajor3IdIsNotNull() {
            addCriterion("`major3_id` is not null");
            return (Criteria) this;
        }

        public Criteria andMajor3IdEqualTo(Integer value) {
            addCriterion("`major3_id` =", value, "major3Id");
            return (Criteria) this;
        }

        public Criteria andMajor3IdNotEqualTo(Integer value) {
            addCriterion("`major3_id` <>", value, "major3Id");
            return (Criteria) this;
        }

        public Criteria andMajor3IdGreaterThan(Integer value) {
            addCriterion("`major3_id` >", value, "major3Id");
            return (Criteria) this;
        }

        public Criteria andMajor3IdGreaterThanOrEqualTo(Integer value) {
            addCriterion("`major3_id` >=", value, "major3Id");
            return (Criteria) this;
        }

        public Criteria andMajor3IdLessThan(Integer value) {
            addCriterion("`major3_id` <", value, "major3Id");
            return (Criteria) this;
        }

        public Criteria andMajor3IdLessThanOrEqualTo(Integer value) {
            addCriterion("`major3_id` <=", value, "major3Id");
            return (Criteria) this;
        }

        public Criteria andMajor3IdIn(List<Integer> values) {
            addCriterion("`major3_id` in", values, "major3Id");
            return (Criteria) this;
        }

        public Criteria andMajor3IdNotIn(List<Integer> values) {
            addCriterion("`major3_id` not in", values, "major3Id");
            return (Criteria) this;
        }

        public Criteria andMajor3IdBetween(Integer value1, Integer value2) {
            addCriterion("`major3_id` between", value1, value2, "major3Id");
            return (Criteria) this;
        }

        public Criteria andMajor3IdNotBetween(Integer value1, Integer value2) {
            addCriterion("`major3_id` not between", value1, value2, "major3Id");
            return (Criteria) this;
        }

        public Criteria andQuestNumIsNull() {
            addCriterion("`quest_num` is null");
            return (Criteria) this;
        }

        public Criteria andQuestNumIsNotNull() {
            addCriterion("`quest_num` is not null");
            return (Criteria) this;
        }

        public Criteria andQuestNumEqualTo(Integer value) {
            addCriterion("`quest_num` =", value, "questNum");
            return (Criteria) this;
        }

        public Criteria andQuestNumNotEqualTo(Integer value) {
            addCriterion("`quest_num` <>", value, "questNum");
            return (Criteria) this;
        }

        public Criteria andQuestNumGreaterThan(Integer value) {
            addCriterion("`quest_num` >", value, "questNum");
            return (Criteria) this;
        }

        public Criteria andQuestNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("`quest_num` >=", value, "questNum");
            return (Criteria) this;
        }

        public Criteria andQuestNumLessThan(Integer value) {
            addCriterion("`quest_num` <", value, "questNum");
            return (Criteria) this;
        }

        public Criteria andQuestNumLessThanOrEqualTo(Integer value) {
            addCriterion("`quest_num` <=", value, "questNum");
            return (Criteria) this;
        }

        public Criteria andQuestNumIn(List<Integer> values) {
            addCriterion("`quest_num` in", values, "questNum");
            return (Criteria) this;
        }

        public Criteria andQuestNumNotIn(List<Integer> values) {
            addCriterion("`quest_num` not in", values, "questNum");
            return (Criteria) this;
        }

        public Criteria andQuestNumBetween(Integer value1, Integer value2) {
            addCriterion("`quest_num` between", value1, value2, "questNum");
            return (Criteria) this;
        }

        public Criteria andQuestNumNotBetween(Integer value1, Integer value2) {
            addCriterion("`quest_num` not between", value1, value2, "questNum");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNull() {
            addCriterion("`start_time` is null");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNotNull() {
            addCriterion("`start_time` is not null");
            return (Criteria) this;
        }

        public Criteria andStartTimeEqualTo(Date value) {
            addCriterion("`start_time` =", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotEqualTo(Date value) {
            addCriterion("`start_time` <>", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThan(Date value) {
            addCriterion("`start_time` >", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("`start_time` >=", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThan(Date value) {
            addCriterion("`start_time` <", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThanOrEqualTo(Date value) {
            addCriterion("`start_time` <=", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeIn(List<Date> values) {
            addCriterion("`start_time` in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotIn(List<Date> values) {
            addCriterion("`start_time` not in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeBetween(Date value1, Date value2) {
            addCriterion("`start_time` between", value1, value2, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotBetween(Date value1, Date value2) {
            addCriterion("`start_time` not between", value1, value2, "startTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNull() {
            addCriterion("`end_time` is null");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNotNull() {
            addCriterion("`end_time` is not null");
            return (Criteria) this;
        }

        public Criteria andEndTimeEqualTo(Date value) {
            addCriterion("`end_time` =", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotEqualTo(Date value) {
            addCriterion("`end_time` <>", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThan(Date value) {
            addCriterion("`end_time` >", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("`end_time` >=", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThan(Date value) {
            addCriterion("`end_time` <", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThanOrEqualTo(Date value) {
            addCriterion("`end_time` <=", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeIn(List<Date> values) {
            addCriterion("`end_time` in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotIn(List<Date> values) {
            addCriterion("`end_time` not in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeBetween(Date value1, Date value2) {
            addCriterion("`end_time` between", value1, value2, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotBetween(Date value1, Date value2) {
            addCriterion("`end_time` not between", value1, value2, "endTime");
            return (Criteria) this;
        }

        public Criteria andIsEndedIsNull() {
            addCriterion("`is_ended` is null");
            return (Criteria) this;
        }

        public Criteria andIsEndedIsNotNull() {
            addCriterion("`is_ended` is not null");
            return (Criteria) this;
        }

        public Criteria andIsEndedEqualTo(Boolean value) {
            addCriterion("`is_ended` =", value, "isEnded");
            return (Criteria) this;
        }

        public Criteria andIsEndedNotEqualTo(Boolean value) {
            addCriterion("`is_ended` <>", value, "isEnded");
            return (Criteria) this;
        }

        public Criteria andIsEndedGreaterThan(Boolean value) {
            addCriterion("`is_ended` >", value, "isEnded");
            return (Criteria) this;
        }

        public Criteria andIsEndedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("`is_ended` >=", value, "isEnded");
            return (Criteria) this;
        }

        public Criteria andIsEndedLessThan(Boolean value) {
            addCriterion("`is_ended` <", value, "isEnded");
            return (Criteria) this;
        }

        public Criteria andIsEndedLessThanOrEqualTo(Boolean value) {
            addCriterion("`is_ended` <=", value, "isEnded");
            return (Criteria) this;
        }

        public Criteria andIsEndedIn(List<Boolean> values) {
            addCriterion("`is_ended` in", values, "isEnded");
            return (Criteria) this;
        }

        public Criteria andIsEndedNotIn(List<Boolean> values) {
            addCriterion("`is_ended` not in", values, "isEnded");
            return (Criteria) this;
        }

        public Criteria andIsEndedBetween(Boolean value1, Boolean value2) {
            addCriterion("`is_ended` between", value1, value2, "isEnded");
            return (Criteria) this;
        }

        public Criteria andIsEndedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("`is_ended` not between", value1, value2, "isEnded");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table paper
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table paper
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}