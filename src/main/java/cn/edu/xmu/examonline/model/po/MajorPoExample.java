package cn.edu.xmu.examonline.model.po;

import java.util.ArrayList;
import java.util.List;

public class MajorPoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table major
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table major
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table major
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major
     *
     * @mbggenerated
     */
    public MajorPoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table major
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("`id` is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("`id` is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("`id` =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("`id` <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("`id` >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("`id` >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("`id` <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("`id` <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("`id` in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("`id` not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("`id` between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("`id` not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andSingleSelectionNumIsNull() {
            addCriterion("`single_selection_num` is null");
            return (Criteria) this;
        }

        public Criteria andSingleSelectionNumIsNotNull() {
            addCriterion("`single_selection_num` is not null");
            return (Criteria) this;
        }

        public Criteria andSingleSelectionNumEqualTo(Integer value) {
            addCriterion("`single_selection_num` =", value, "singleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andSingleSelectionNumNotEqualTo(Integer value) {
            addCriterion("`single_selection_num` <>", value, "singleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andSingleSelectionNumGreaterThan(Integer value) {
            addCriterion("`single_selection_num` >", value, "singleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andSingleSelectionNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("`single_selection_num` >=", value, "singleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andSingleSelectionNumLessThan(Integer value) {
            addCriterion("`single_selection_num` <", value, "singleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andSingleSelectionNumLessThanOrEqualTo(Integer value) {
            addCriterion("`single_selection_num` <=", value, "singleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andSingleSelectionNumIn(List<Integer> values) {
            addCriterion("`single_selection_num` in", values, "singleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andSingleSelectionNumNotIn(List<Integer> values) {
            addCriterion("`single_selection_num` not in", values, "singleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andSingleSelectionNumBetween(Integer value1, Integer value2) {
            addCriterion("`single_selection_num` between", value1, value2, "singleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andSingleSelectionNumNotBetween(Integer value1, Integer value2) {
            addCriterion("`single_selection_num` not between", value1, value2, "singleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andMultipleSelectionNumIsNull() {
            addCriterion("`multiple_selection_num` is null");
            return (Criteria) this;
        }

        public Criteria andMultipleSelectionNumIsNotNull() {
            addCriterion("`multiple_selection_num` is not null");
            return (Criteria) this;
        }

        public Criteria andMultipleSelectionNumEqualTo(Integer value) {
            addCriterion("`multiple_selection_num` =", value, "multipleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andMultipleSelectionNumNotEqualTo(Integer value) {
            addCriterion("`multiple_selection_num` <>", value, "multipleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andMultipleSelectionNumGreaterThan(Integer value) {
            addCriterion("`multiple_selection_num` >", value, "multipleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andMultipleSelectionNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("`multiple_selection_num` >=", value, "multipleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andMultipleSelectionNumLessThan(Integer value) {
            addCriterion("`multiple_selection_num` <", value, "multipleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andMultipleSelectionNumLessThanOrEqualTo(Integer value) {
            addCriterion("`multiple_selection_num` <=", value, "multipleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andMultipleSelectionNumIn(List<Integer> values) {
            addCriterion("`multiple_selection_num` in", values, "multipleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andMultipleSelectionNumNotIn(List<Integer> values) {
            addCriterion("`multiple_selection_num` not in", values, "multipleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andMultipleSelectionNumBetween(Integer value1, Integer value2) {
            addCriterion("`multiple_selection_num` between", value1, value2, "multipleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andMultipleSelectionNumNotBetween(Integer value1, Integer value2) {
            addCriterion("`multiple_selection_num` not between", value1, value2, "multipleSelectionNum");
            return (Criteria) this;
        }

        public Criteria andJudgementNumIsNull() {
            addCriterion("`judgement_num` is null");
            return (Criteria) this;
        }

        public Criteria andJudgementNumIsNotNull() {
            addCriterion("`judgement_num` is not null");
            return (Criteria) this;
        }

        public Criteria andJudgementNumEqualTo(Integer value) {
            addCriterion("`judgement_num` =", value, "judgementNum");
            return (Criteria) this;
        }

        public Criteria andJudgementNumNotEqualTo(Integer value) {
            addCriterion("`judgement_num` <>", value, "judgementNum");
            return (Criteria) this;
        }

        public Criteria andJudgementNumGreaterThan(Integer value) {
            addCriterion("`judgement_num` >", value, "judgementNum");
            return (Criteria) this;
        }

        public Criteria andJudgementNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("`judgement_num` >=", value, "judgementNum");
            return (Criteria) this;
        }

        public Criteria andJudgementNumLessThan(Integer value) {
            addCriterion("`judgement_num` <", value, "judgementNum");
            return (Criteria) this;
        }

        public Criteria andJudgementNumLessThanOrEqualTo(Integer value) {
            addCriterion("`judgement_num` <=", value, "judgementNum");
            return (Criteria) this;
        }

        public Criteria andJudgementNumIn(List<Integer> values) {
            addCriterion("`judgement_num` in", values, "judgementNum");
            return (Criteria) this;
        }

        public Criteria andJudgementNumNotIn(List<Integer> values) {
            addCriterion("`judgement_num` not in", values, "judgementNum");
            return (Criteria) this;
        }

        public Criteria andJudgementNumBetween(Integer value1, Integer value2) {
            addCriterion("`judgement_num` between", value1, value2, "judgementNum");
            return (Criteria) this;
        }

        public Criteria andJudgementNumNotBetween(Integer value1, Integer value2) {
            addCriterion("`judgement_num` not between", value1, value2, "judgementNum");
            return (Criteria) this;
        }

        public Criteria andShortAnswerNumIsNull() {
            addCriterion("`short_answer_num` is null");
            return (Criteria) this;
        }

        public Criteria andShortAnswerNumIsNotNull() {
            addCriterion("`short_answer_num` is not null");
            return (Criteria) this;
        }

        public Criteria andShortAnswerNumEqualTo(Integer value) {
            addCriterion("`short_answer_num` =", value, "shortAnswerNum");
            return (Criteria) this;
        }

        public Criteria andShortAnswerNumNotEqualTo(Integer value) {
            addCriterion("`short_answer_num` <>", value, "shortAnswerNum");
            return (Criteria) this;
        }

        public Criteria andShortAnswerNumGreaterThan(Integer value) {
            addCriterion("`short_answer_num` >", value, "shortAnswerNum");
            return (Criteria) this;
        }

        public Criteria andShortAnswerNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("`short_answer_num` >=", value, "shortAnswerNum");
            return (Criteria) this;
        }

        public Criteria andShortAnswerNumLessThan(Integer value) {
            addCriterion("`short_answer_num` <", value, "shortAnswerNum");
            return (Criteria) this;
        }

        public Criteria andShortAnswerNumLessThanOrEqualTo(Integer value) {
            addCriterion("`short_answer_num` <=", value, "shortAnswerNum");
            return (Criteria) this;
        }

        public Criteria andShortAnswerNumIn(List<Integer> values) {
            addCriterion("`short_answer_num` in", values, "shortAnswerNum");
            return (Criteria) this;
        }

        public Criteria andShortAnswerNumNotIn(List<Integer> values) {
            addCriterion("`short_answer_num` not in", values, "shortAnswerNum");
            return (Criteria) this;
        }

        public Criteria andShortAnswerNumBetween(Integer value1, Integer value2) {
            addCriterion("`short_answer_num` between", value1, value2, "shortAnswerNum");
            return (Criteria) this;
        }

        public Criteria andShortAnswerNumNotBetween(Integer value1, Integer value2) {
            addCriterion("`short_answer_num` not between", value1, value2, "shortAnswerNum");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table major
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table major
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}